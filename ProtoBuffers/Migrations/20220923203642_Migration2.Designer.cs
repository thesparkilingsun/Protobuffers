// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProtoBuffers;

#nullable disable

namespace ProtoBuffers.Migrations
{
    [DbContext(typeof(DbContextClass))]
    [Migration("20220923203642_Migration2")]
    partial class Migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DummyDB.Models.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Fetch")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Component");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Code = "101",
                            Fetch = false,
                            Path = "La-CA"
                        },
                        new
                        {
                            Id = 15,
                            Code = "111",
                            Fetch = true,
                            Path = "CA-LA"
                        });
                });

            modelBuilder.Entity("DummyDB.Models.Items", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int?>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            ComponentId = 6,
                            Sku = "LA1"
                        },
                        new
                        {
                            Id = 14,
                            ComponentId = 15,
                            Sku = "LA3"
                        });
                });

            modelBuilder.Entity("DummyDB.Models.OrderData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.ToTable("OrderData");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 9, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderNumber = "3745896",
                            ShipmentId = 4,
                            Time = new DateTime(2022, 9, 23, 15, 36, 42, 419, DateTimeKind.Local).AddTicks(9333)
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2022, 9, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderNumber = "3745896",
                            ShipmentId = 13,
                            Time = new DateTime(2022, 9, 23, 15, 36, 42, 419, DateTimeKind.Local).AddTicks(9337)
                        });
                });

            modelBuilder.Entity("DummyDB.Models.OrderSchema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderDataId")
                        .HasColumnType("int");

                    b.Property<int>("OrderSourceDestinatonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderDataId");

                    b.HasIndex("OrderSourceDestinatonId");

                    b.ToTable("OrderSchema");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDataId = 2,
                            OrderSourceDestinatonId = 3
                        },
                        new
                        {
                            Id = 10,
                            OrderDataId = 11,
                            OrderSourceDestinatonId = 12
                        });
                });

            modelBuilder.Entity("DummyDB.Models.OrderSourceDestinaton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderSourceDestinaton");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            DestinationId = 98,
                            DestinationName = "IND",
                            SourceId = 88,
                            SourceName = "BHA"
                        },
                        new
                        {
                            Id = 12,
                            DestinationId = 99,
                            DestinationName = "ND",
                            SourceId = 89,
                            SourceName = "BA"
                        });
                });

            modelBuilder.Entity("DummyDB.Models.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Carrier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarrierId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsoCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipToId")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shipment");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Address = "Hindus Force Fortress",
                            Carrier = "DeltaD",
                            CarrierId = 412,
                            Code = "368M",
                            CompanyName = "Hindu Force",
                            IsoCountry = "IN",
                            ItemsId = 0,
                            Name = "Netaji",
                            PostalCode = "61282",
                            ShipToId = 214,
                            Town = "Bharat"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Hindus Forc",
                            Carrier = "DeltD",
                            CarrierId = 412,
                            Code = "MM368",
                            CompanyName = "Hindu orce",
                            IsoCountry = "NI",
                            ItemsId = 0,
                            Name = "Neta",
                            PostalCode = "1282",
                            ShipToId = 100,
                            Town = "Bhar"
                        });
                });

            modelBuilder.Entity("DummyDB.Models.Items", b =>
                {
                    b.HasOne("DummyDB.Models.Component", "Component")
                        .WithMany()
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DummyDB.Models.Shipment", null)
                        .WithMany("Items")
                        .HasForeignKey("ShipmentId");

                    b.Navigation("Component");
                });

            modelBuilder.Entity("DummyDB.Models.OrderData", b =>
                {
                    b.HasOne("DummyDB.Models.Shipment", "Shipment")
                        .WithMany()
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("DummyDB.Models.OrderSchema", b =>
                {
                    b.HasOne("DummyDB.Models.OrderData", "OrderData")
                        .WithMany()
                        .HasForeignKey("OrderDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DummyDB.Models.OrderSourceDestinaton", "OrderSourceDestinaton")
                        .WithMany()
                        .HasForeignKey("OrderSourceDestinatonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderData");

                    b.Navigation("OrderSourceDestinaton");
                });

            modelBuilder.Entity("DummyDB.Models.Shipment", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
